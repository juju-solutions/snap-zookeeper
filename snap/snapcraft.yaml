name: zookeeper
version: '1.2.0'
summary: Apache Zookeeper
description: |
  Apache ZooKeeper is a centralized, reliable application for maintaining
  configuration information, naming, synchronization, and group services.
  All of these kinds of services are used in some form or another by
  distributed applications.

  This snap installs Zookeeper 3.4.6 and is compatible with Apache Bigtop 1.2.0.
grade: devel
confinement: strict

apps:
  zookeeper-client:
    command: wrappers/zookeeper-client
    plugs:
      - 'network'
  zookeeper-server-cleanup:
    command: wrappers/zookeeper-server-cleanup
    plugs:
      - 'network'
  zookeeper-server-initialize:
    command: wrappers/zookeeper-server-initialize
    plugs:
      - 'network'
  zookeeper-server:
    command: wrappers/zookeeper-server start
    stop-command: wrappers/zookeeper-server stop
    daemon: forking
    plugs:
      - 'network'
      - 'network-bind'

plugs:
  home:
    interface: home

slots:
  zookeeper:
    interface: content
    content: zookeeper
    read:
      - $SNAP
  zookeeper-conf:
    interface: content
    content: zookeeper-conf
    write:
      - $SNAP_DATA/etc/zookeeper

parts:
  bigtop:
    source: https://github.com/apache/bigtop.git
    source-type: git
    source-branch: branch-1.2
    plugin: gradle
    gradle-options: ['-b', 'packages.gradle', 'bom-snap']
    build-packages:
      - curl
      - puppet-common
    stage-packages:
      - default-jdk-headless
    prepare: |
      # get bigtop buildreqs on the system
      if [ `id -u` -ne 0 ]; then
        PUPPET_CMD='sudo -E puppet apply'
      else
        PUPPET_CMD='puppet apply'
      fi
      ${PUPPET_CMD} -d --parser future --modulepath=".:/etc/puppet/modules" \
        -e "include bigtop_toolchain::protobuf"
      ${PUPPET_CMD} -d --parser future --modulepath=".:/etc/puppet/modules" \
        -e "include bigtop_toolchain::packages"

      # add a gradle task to generate a sourceable bom for use by other parts
      echo 'task "bom-snap" () << {' >> packages.gradle
      echo '  def bomWriter = new File("bigtop-snap.bom").newWriter()' >> packages.gradle
      echo '  bomVersions.each { bomWriter << "$it\\n"}' >> packages.gradle
      echo '  bomWriter.close()' >> packages.gradle
      echo '}' >> packages.gradle

      # there is no 'build' for bigtop-utils source, just set perms
      chmod 755 bigtop-packages/src/common/bigtop-utils/bigtop-detect-*

      # make sure utils point to the right default directory
      for i in `ls bigtop-packages/src/common/bigtop-utils/bigtop-*`; do
        sed -e 's|/etc/default|${SNAP}/etc/default|' -i $i; done

      # point bigtop-utils to SNAP_DATA for additional classpath entries
      echo 'export BIGTOP_CLASSPATH=${SNAP_DATA}/var/lib/bigtop' >> \
        bigtop-packages/src/common/bigtop-utils/bigtop-utils.default

      # set bigtop-utils java home to the jdk packed into the snap
      echo 'export JAVA_HOME=${SNAP}/usr/lib/jvm/default-java' >> \
        bigtop-packages/src/common/bigtop-utils/bigtop-utils.default
    install: |
      # adapted from bigtop/bigtop-packages/src/deb/bigtop-utils/rules
      install -d -p -m 755 $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -p -m 755 bigtop-packages/src/common/bigtop-utils/bigtop-detect-javahome \
        $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -p -m 755 bigtop-packages/src/common/bigtop-utils/bigtop-detect-javalibs \
        $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -p -m 755 bigtop-packages/src/common/bigtop-utils/bigtop-detect-classpath \
        $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -p -m 755 bigtop-packages/src/common/bigtop-utils/bigtop-monitor-service \
        $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -d -p -m 755 $SNAPCRAFT_PART_INSTALL/bigtop-utils/etc/default
      install -p -m 644 bigtop-packages/src/common/bigtop-utils/bigtop-utils.default \
        $SNAPCRAFT_PART_INSTALL/etc/default/bigtop-utils
    stage:
      - etc/*
      - usr/lib/*
  bigtop-groovy:
    after:
      - bigtop
    source: https://dl.bintray.com/groovy/maven/apache-groovy-binary-2.4.10.zip
    plugin: dump
    prepare: |
      cp ../../bigtop/build/bigtop-snap.bom \
        ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/bigtop.bom
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/do-component-build
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/install_groovy.sh
    build: |
      ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/do-component-build
    install: |
      # adapted from bigtop/bigtop-packages/src/deb/bigtop-groovy/rules
      ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/install_groovy.sh \
        --build-dir=groovy-2.4.10 \
        --prefix=$SNAPCRAFT_PART_INSTALL \
        --bin-dir=usr/lib/bigtop-groovy/bin \
        --version=2.4.10 \
        --lib-dir=usr/lib/bigtop-groovy/lib \
        --conf-dir=usr/lib/bigtop-groovy/conf
    stage:
      - usr/lib/*
  bigtop-jsvc:
    after:
      - bigtop
    source: https://archive.apache.org/dist/commons/daemon/source/commons-daemon-1.0.15-native-src.tar.gz
    plugin: autotools
    prepare: |
      cp ../../bigtop/build/bigtop-snap.bom \
        ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/bigtop.bom
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/do-component-build
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/install_jsvc.sh

      # patch jsvc sources with bigtop-specific changes
      for i in `ls ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/patch*.diff`; do \
        patch -p1 -i $i; done
    build: |
      # the autotools plugin ensures we get the right build tools, but we \
      # still want to use the bigtop build recipe.
      bash -c '. ../../bigtop/build/bigtop-packages/src/common/bigtop-utils/bigtop-detect-javahome && \
        ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/do-component-build'
    install: |
      # adapted from bigtop/bigtop-packages/src/deb/bigtop-jsvc/rules
      ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/install_jsvc.sh \
        --build-dir=. \
        --prefix=$SNAPCRAFT_PART_INSTALL
    stage:
      - usr/lib/*
      - usr/share/*
  zookeeper:
    after:
      - bigtop-groovy
      - bigtop-jsvc
    source: https://s3.amazonaws.com/jujubigdata/apache/noarch/zookeeper-3.4.6.tar.gz
    plugin: ant
    ant-build-targets:
      - clean
    build-packages:
      - curl
      - gzip
      - maven
      - tar
    prepare: |
      cp ../../bigtop/build/bigtop-snap.bom \
        ../../bigtop/build/bigtop-packages/src/common/zookeeper/bigtop.bom
      cp ../../../snap/sources/zoo.cfg .
      cp ../../bigtop/build/bigtop-packages/src/common/zookeeper/zookeeper.1 .
      cp ../../bigtop/build/bigtop-packages/src/common/zookeeper/zookeeper.default .
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/zookeeper/do-component-build
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/zookeeper/install_zookeeper.sh

      # patch bigtop sources with snap-specific changes for zookeeper
      for i in `ls ../../../snap/sources/patch*.diff`; do \
        patch -d ../../bigtop/build -p1 -i $i; done

      # patch zookeeper sources with bigtop-specific changes
      for i in `ls ../../bigtop/build/bigtop-packages/src/common/zookeeper/patch*.diff`; do \
        patch -p1 -i $i; done

      # proxied builds need help when ant tries to get ivy (ANT_OPTS is not enough)
      # NB: ${http.var} will be set by the ant plugin when appropriate
      NEEDS_PROXY=0
      if [ -n "${http_proxy}" ]; then
        NEEDS_PROXY=1
        sed -e '/name="ivy-download"/a \
          <setproxy proxyhost="${http.proxyHost}" proxyport="${http.proxyPort}" \
              proxyuser="${http.proxyUser}" proxypassword="${http.proxyPassword}"/>' \
          -e '/name="ivy-resolve"/a \
          <setproxy proxyhost="${http.proxyHost}" proxyport="${http.proxyPort}" \
              proxyuser="${http.proxyUser}" proxypassword="${http.proxyPassword}"/>' \
          -i build.xml
      elif [ -n "${https_proxy}" ]; then
        NEEDS_PROXY=1
        sed -e '/name="ivy-download"/a \
          <setproxy proxyhost="${https.proxyHost}" proxyport="${https.proxyPort}" \
              proxyuser="${https.proxyUser}" proxypassword="${https.proxyPassword}"/>' \
          -e '/name="ivy-resolve"/a \
          <setproxy proxyhost="${https.proxyHost}" proxyport="${https.proxyPort}" \
              proxyuser="${https.proxyUser}" proxypassword="${https.proxyPassword}"/>' \
          -i build.xml
      fi
      # Prepare source for a proxied build (common to http and https)
      if [ "${NEEDS_PROXY}" -eq "111" ]; then
        # NB: ivy does not like lp builder proxies (perhaps because they're
        # authenticated). Put an ivy cache in place that already contains deps.
        sed -e 's/checkmodified="true"/checkmodified="false"/' -i ivy/ivysettings.xml
        curl -O https://s3.amazonaws.com/jujubigdata/snap-resources/pig/pig-ivy-cache.tgz 
        tar -C ${HOME} -zxf pig-ivy-cache.tgz

        # tell the resolve task to only use the local cache
        sed -e 's/<ivy:resolve/<ivy:resolve useCacheOnly="true"/' -i build.xml
        sed -e 's/changing="true"/changing="false"/' -i ivy.xml

        # dont blow away our cache!
        sed -e 's|${h}/.ivy2/cache/\*jetty||' -i \
          ../../bigtop/build/bigtop-packages/src/common/pig/do-component-build
      fi
    install: |
      # Do not define build tasks because we want the ant plugin to setup any
      # proxy config (otherwise, we'd have to grok the env and do it ourselves).
      # We still want to use the bigtop build recipe for the actual build, so
      # do it asap during install.
      # NB: exit 1 on failure since install step failures do not stop the build
      ../../bigtop/build/bigtop-packages/src/common/zookeeper/do-component-build || exit 1

      # adapted from bigtop/bigtop-packages/src/deb/zookeeper/rules
      ../../bigtop/build/bigtop-packages/src/common/zookeeper/install_zookeeper.sh \
        --build-dir=build/zookeeper-3.4.6 \
        --prefix=$SNAPCRAFT_PART_INSTALL

      # FIXME: hack a $SNAP_DATA symlink since we cant use $SNAP_DATA during build
      rm -f $SNAPCRAFT_PART_INSTALL/usr/lib/zookeeper/conf
      ln -s /var/snap/zookeeper/current/etc/zookeeper/conf \
        $SNAPCRAFT_PART_INSTALL/usr/lib/zookeeper/conf
    stage:
      - etc/zookeeper
      - usr/lib/zookeeper

  wrappers:
    after:
      - zookeeper
    source: snap/
    plugin: dump
    stage:
      - wrappers/*
